name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  NUGET_SOURCE: 'https://api.nuget.org/v3/index.json'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Important for versioning
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"
    
    - name: Pack
      run: |
        # Determine version
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        elif [[ $GITHUB_REF == refs/heads/main ]]; then
          VERSION=$(date +%Y.%m.%d)-rc.$GITHUB_RUN_NUMBER
        else
          VERSION=$(date +%Y.%m.%d)-beta.$GITHUB_RUN_NUMBER
        fi
        
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        
        dotnet pack src/Cerebras.Cloud.Sdk/Cerebras.Cloud.Sdk.csproj \
          --configuration Release \
          --no-build \
          --output ./artifacts \
          -p:PackageVersion=$VERSION
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg
        retention-days: 7

  publish-prerelease:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Publish to NuGet
      run: |
        dotnet nuget push ./artifacts/*.nupkg \
          --source ${{ env.NUGET_SOURCE }} \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --skip-duplicate

  publish-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Publish to NuGet
      run: |
        dotnet nuget push ./artifacts/*.nupkg \
          --source ${{ env.NUGET_SOURCE }} \
          --api-key ${{ secrets.NUGET_API_KEY }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./artifacts/*.nupkg
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}